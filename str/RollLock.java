package Leetcode.str;

// leetcode752
// 每次旋转都只能旋转一个拨轮的一位数字。
// deadends 包含了一组死亡数字，target 代表可以解锁的数字，你需要给出最小的旋转次数，如果无论如何不能解锁，返回 -1。

//输入：deadends = ["0201","0101","0102","1212","2002"], target = "0202"
//输出：6
//解释：
//可能的移动序列为 "0000" -> "1000" -> "1100" -> "1200" -> "1201" -> "1202" -> "0202"。
//注意 "0000" -> "0001" -> "0002" -> "0102" -> "0202" 这样的序列是不能解锁的，
//因为当拨动到 "0102" 时这个锁就会被锁定。

public class RollLock {
    public int openLock(String[] deadends, String target) {


        return 0;
    }
}
